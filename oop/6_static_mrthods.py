class Person:
    def hello(self):
        print("Hello")
    @staticmethod # декоратор для статического метода, который не требует передачи аргументов.
    # Статические методы экономят память и ресурсы процессора на создание объектов функции
    def goodbye():
        print("Goodbye")

p = Person()
p.hello()
p.goodbye() # если вызывать метод, в функции которого не прописана передача аргумента, появится ошибка.
# для избежания этого перед такой функцией можно добавить декоратор @staticmethod


a = Person()
b = Person()

a.hello()
a.goodbye()

print(id(a.hello)) # разные объекты
print(id(b.hello)) # разные объекты

print(id(a.goodbye)) # один и тот же объект, id совпадает, даже если их миллион экземпляров
print(id(b.goodbye)) # один и тот же объект

print(a.__dict__)
print(b.__dict__)

Person.goodbye() # чтобы вызвать статический метод необязательно создавать объект экземпляра класса
# т.е. статический метод это просто функция, без доступа к свойствам и методам экземпляров классов и самим классов
# независимы, используются как вспомогательные 